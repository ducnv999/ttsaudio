<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class TTSAudio_Plugin_Options {
	private $ttsaudio_options;
	private $tts;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'ttsaudio_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'ttsaudio_page_init' ) );
	}

	public function ttsaudio_add_plugin_page() {
		add_menu_page(
			'TTS Audio', // page_title
			'TTS Audio', // menu_title
			'manage_options', // capability
			'ttsaudio', // menu_slug
			array( $this, 'ttsaudio_create_admin_page' ), // function
			'dashicons-controls-volumeon', // icon_url
		);
	}

	public function ttsaudio_create_admin_page() {
		$this->ttsaudio_options = get_option( 'ttsaudio_options' );
		$this->tts = new TTSAudio;
		?>

		<div class="wrap">
			<h2>TTSAudio</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'ttsaudio_option_group' );
					do_settings_sections( 'ttsaudio-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function ttsaudio_page_init() {
		register_setting(
			'ttsaudio_option_group', // option_group
			'ttsaudio_options', // option_name
			array( $this, 'ttsaudio_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'ttsaudio_setting_section', // id
			'Settings', // title
			array( $this, 'ttsaudio_section_info' ), // callback
			'ttsaudio-admin' // page
		);

		add_settings_field(
			'plyr_skin', // id
			'Skin', // title
			array( $this, 'plyr_skin_callback' ), // callback
			'ttsaudio-admin', // page
			'ttsaudio_setting_section' // section
		);

		add_settings_field(
			'default_voice', // id
			'Default Voice', // title
			array( $this, 'default_voice_callback' ), // callback
			'ttsaudio-admin', // page
			'ttsaudio_setting_section' // section
		);

		add_settings_field(
			'fpt_api_key', // id
			'FPT API Key', // title
			array( $this, 'fpt_api_key_callback' ), // callback
			'ttsaudio-admin', // page
			'ttsaudio_setting_section' // section
		);
	}

	public function ttsaudio_sanitize($input) {

		$sanitary_values = array();
		if ( isset( $input['plyr_skin'] ) ) {
			$sanitary_values['plyr_skin'] = sanitize_text_field ( $input['plyr_skin'] );
		}

		if ( isset( $input['default_voice'] ) ) {
			$sanitary_values['default_voice'] = sanitize_text_field( $input['default_voice'] );
		}

		if ( isset( $input['fpt_api_key'] ) ) {
			$sanitary_values['fpt_api_key'] = sanitize_text_field( $input['fpt_api_key'] );
		}

		return apply_filters('ttsaudio_sanitize', $input, $sanitary_values);

		//return $sanitary_values;
	}

	public function ttsaudio_section_info() {

	}

	public function plyr_skin_callback() {?>

		<select name="ttsaudio_options[plyr_skin]" id="plyr_skin">
			<?php
			foreach ( $this->tts->PlyrSkin() as $key => $value ) {?>
				<option value="<?php esc_attr_e( $key );?>" <?php selected( $this->ttsaudio_options['plyr_skin'], esc_attr( $key ) ); ?>><?php esc_html_e( $value );?></option>
			<?php }?>
		</select>
		<p class="description"><?php _e( 'This skin will be appeared in Single post and default for TTSaudio widget.', 'ttsaudio' ); ?></p>
	<?php
	}

	public function default_voice_callback() {
		?> <select name="ttsaudio_options[default_voice]" id="default_voice">
			<?php
			foreach ( $this->tts->voices as $key => $value ) {?>
				<option value="<?php esc_attr_e( $key );?>" <?php selected( $this->ttsaudio_options['default_voice'], esc_attr( $key ) ); ?>><?php esc_html_e( $value );?></option>
			<?php }?>

		</select> <p class="description"><?php _e( 'You can change this option during add/edit post.', 'ttsaudio' ); ?></p>
		<?php
	}

	public function fpt_api_key_callback() {
		printf(
			'<input class="regular-text" type="text" name="ttsaudio_options[fpt_api_key]" id="fpt_api_key" value="%s">',
			isset( $this->ttsaudio_options['fpt_api_key'] ) ? esc_attr( $this->ttsaudio_options['fpt_api_key']) : ''
		);
		echo '<p class="description">'.__('If you don\'t use Vietnamese, leave it blank.').'<a href="https://console.fpt.ai/" target="_blank"><small>Get FPT API KEY</small></a> (max 5000 characters)</p>';
	}

}
if ( is_admin() )
	$ttsaudio = new TTSAudio_Plugin_Options();

/*
 * Retrieve this value with:
 * $ttsaudio_options = get_option( 'ttsaudio_options' ); // Array of All Options
 * $plyr_skin = $ttsaudio_options['plyr_skin']; // Skin
 * $default_voice = $ttsaudio_options['default_voice']; // Default Voice
 * $fpt_api_key_2 = $ttsaudio_options['fpt_api_key']; // FPT API Key
 */
